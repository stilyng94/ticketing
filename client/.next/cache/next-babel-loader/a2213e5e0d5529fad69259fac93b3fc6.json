{"ast":null,"code":"import _defineProperty from \"/Users/sayetech/freelance/ticketing/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from \"axios\";\n\nvar buildClient = function buildClient(_ref) {\n  var req = _ref.req;\n\n  if (false) {\n    //! We on server\n    //! http://SERVICENAME.NAMESPACE.svc.cluster.local\n    return axios.create({\n      baseURL: \"http://ingress-ngnix.ingress-ngnix.svc.cluster.local\",\n      headers: _objectSpread({}, req.headers)\n    });\n  } else {\n    //!We on client side\n    return axios.create({\n      baseURL: \"/\",\n      withCredentials: true\n    });\n  }\n};\n\nexport default buildClient;","map":{"version":3,"sources":["/Users/sayetech/freelance/ticketing/client/api/build-client.js"],"names":["axios","buildClient","req","create","baseURL","headers","withCredentials"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAa;AAAA,MAAVC,GAAU,QAAVA,GAAU;;AAC/B,aAAmC;AACjC;AACA;AAEA,WAAOF,KAAK,CAACG,MAAN,CAAa;AAClBC,MAAAA,OAAO,EAAE,sDADS;AAElBC,MAAAA,OAAO,oBACFH,GAAG,CAACG,OADF;AAFW,KAAb,CAAP;AAMD,GAVD,MAUO;AACL;AACA,WAAOL,KAAK,CAACG,MAAN,CAAa;AAAEC,MAAAA,OAAO,EAAE,GAAX;AAAgBE,MAAAA,eAAe,EAAE;AAAjC,KAAb,CAAP;AACD;AACF,CAfD;;AAiBA,eAAeL,WAAf","sourcesContent":["import axios from \"axios\";\n\nconst buildClient = ({ req }) => {\n  if (typeof window === \"undefined\") {\n    //! We on server\n    //! http://SERVICENAME.NAMESPACE.svc.cluster.local\n\n    return axios.create({\n      baseURL: \"http://ingress-ngnix.ingress-ngnix.svc.cluster.local\",\n      headers: {\n        ...req.headers,\n      },\n    });\n  } else {\n    //!We on client side\n    return axios.create({ baseURL: \"/\", withCredentials: true });\n  }\n};\n\nexport default buildClient;\n"]},"metadata":{},"sourceType":"module"}